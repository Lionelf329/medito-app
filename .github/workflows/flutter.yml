# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  checks:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Java version
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Check Flutter and Dart versions
        run: |
          flutter --version
          DART_PATH=$(dirname $(which dart))
          echo "DART_PATH=$DART_PATH" >> $GITHUB_ENV

      - name: Create dummy env files
        run: |
          echo "var BASE_URL = ''; var SENTRY_URL = ''; var INIT_TOKEN = '';" > .prod.env
          echo "var BASE_URL = ''; var SENTRY_URL = ''; var INIT_TOKEN = '';" > .staging.env

      - name: Generate code
        run: |
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter pub run pigeon --input pigeon_conf.dart

      - name: Analyze
        run: flutter analyze . || exit $(( $? == 1 ? 0 : $? ))

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/